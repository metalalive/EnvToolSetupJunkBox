#user  OS_USER_NAME  OS_USER_GROUP;
worker_processes  1;
## logging level can be `debug`, `info`, `error`
error_log   logs/nginx.error.log info;
pid         logs/nginx.pid; # to run nginx instance as a daemon
worker_rlimit_nofile  128;

events {
    worker_connections  5; # must not be greater than worker_rlimit_nofile
}

http {
    include       conf/mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout  25;
    
    ## basic setup for nginx-module-vts
    vhost_traffic_status_zone  shared:vts_stats_shr:3m;
    vhost_traffic_status_histogram_buckets   0.04  0.1  0.3  0.5  1 5 10;
    vhost_traffic_status_filter  on;
    vhost_traffic_status_filter_max_node   17   $upstream_addr::non-stream-file::* ;
    
    # the path has to be present (created by OS_USER_NAME) before starting the server
    proxy_cache_path  customdata/nJeeks/cache  levels=2:2  inactive=4m  use_temp_path=off  max_size=10m  keys_zone=zone_one:2m;
    proxy_cache_lock_timeout  11s;
    proxy_cache_lock_age      10s;
    proxy_read_timeout        53s;
    proxy_send_timeout        47s;
    
    limit_conn_zone  $binary_remote_addr  zone=mylmt_conns_state:1m;
    limit_req_zone   $binary_remote_addr  zone=mylmt_reqs_state:2m rate=3r/s;

    upstream backend_app_345 {
        # could scale to serveral app servers
        server localhost:8010  max_conns=31  max_fails=3 fail_timeout=7s  weight=3;
        server localhost:8011  max_conns=38  max_fails=3 fail_timeout=8s  weight=5;
        keepalive   10;
    } # all the servers at here should use the same settings ?
    
    server { ## start of proxy server block
        listen       8050  ssl;
        server_name  localhost;
        error_page   404 410              /404.html;
        error_page   500 502 503 504  515 /50x.html;
        ssl_certificate      /PATH/TO/PROXY/SERVER.crt;
        ssl_certificate_key  /PATH/TO/PROXY/SERVER/secret.key;
        ##ssl_session_ticket_key   /PATH/TO/SESSION-TICKET.key;
        ssl_session_cache  shared:ALIAS_OF_THE_CACHE:3m;
        ssl_protocols   TLSv1.3  TLSv1.2;
        ssl_session_timeout   6m;
        
        location ~ \.jpg$ {
            limit_rate   17k;
            vhost_traffic_status_filter_by_set_key   pictureJPG   img_jpg::*;
        }
        location ~ \.png$ {
            limit_rate   22k;
            vhost_traffic_status_filter_by_set_key   picturePNG   img_png::*;
        }
        
        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
            vhost_traffic_status_bypass_limit    off;
            vhost_traffic_status_bypass_stats    on;
            limit_req  zone=mylmt_reqs_state  burst=2;
            limit_req_status  430;
            allow  123.4.56.78;
            allow  127.0.0.1;
            deny   all;
        } ## TODO, authorization

        # Debug log file shows Nginx failed to open local file `/html/file`
        # then immediately return 404 without pass the request to backend app.
        # Regex location might not be able to work with proxy_pass directive ? (TODO)
        # location ~ ^/file\?res_id=[A-Za-z0-9%]+$ {
        location  /file {
            proxy_pass  https://backend_app_345;
            proxy_ssl_protocols   TLSv1.3;  # prerequisites, openssl >= v1.1.1
            proxy_ssl_certificate      /PATH/TO/PROXIED/UPSTREAM/ca.crt;
            proxy_ssl_certificate_key  /PATH/TO/PROXIED/UPSTREAM/ca.secret.key;
            # added if it is self-signed CA (not well-known trusted CA).
            proxy_ssl_trusted_certificate  /PATH/TO/PROXIED/UPSTREAM/ca.crt;
            ##proxy_ssl_verify  on; ## error on client (proxy server) verify
            proxy_http_version    1.1;      # http/2 still not supported, figure out why (TODO)
            add_header  X-Cache-Status  $upstream_cache_status;
            proxy_cache      zone_one;
            proxy_cache_key  $request_uri;  # can also use custom header from upstream backend
            proxy_cache_valid  200  1m;
            proxy_no_cache   $WHATEVER_VARIABLE;
            proxy_buffering  on; # it is turned on by default
            proxy_buffer_size  5k;
            proxy_buffers    7  9k;
            limit_conn  mylmt_conns_state  1;
            limit_conn_status  429;
            proxy_cache_lock  on;
            proxy_cache_use_stale   error timeout updating;
            vhost_traffic_status_filter_by_set_key  $uri  $upstream_addr::non-stream-file::*;
        } ## end of location block
    } # end of proxy server block

    # you might have another server group running in different setup
    upstream django_backend {
        server localhost:8009; # use web port socket
    }

    server {
        listen       8008;
        server_name  localhost;
        charset      utf-8;
        access_log   logs/nginx.access.log;
        client_max_body_size  16M;
        allow        127.0.0.1; # allow the requests from these IPs (they cannot be domain name)
        deny         all; # deny rest of IPs, note the order of the allow/deny declaratives will affect your IP whitelisting

        location / { # forward all the paths to WSGI application (hosted in uwsgi in this case)
            include     conf/uwsgi_params;
            uwsgi_pass  django_backend; # specify the name of upstream component
            ##uwsgi_pass   localhost:8009;
        }
    }
} ## end of http block
